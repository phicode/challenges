Example Part 1
==============
Valve Combinations: 2^6=64
Move Positions: 10
Valve*Move Combinations: 10*64 = 640
Time: 30
Total Combinations: 10*64*30 = 19200

Input Part 1
============
Valve Combinations: 2^15=32768
Move Positions: 57
Valve*Move Combinations: 57*2^15 = 1'867'776
Time: 30
Total Combinations: 57*2^15*30 = 56'033'280

Example Part 2
==============
Valve Combinations: 2^6=64
Move Positions: 10*10=100
Valve*Move Combinations: 10*10*2^6 = 6'400
Time: 26
Total Combinations: 10*10*2^6*26 = 166'400

Input Part 2
============
Valve Combinations: 2^15=32768
Move Positions: 57*57=3249
Valve*Move Combinations: 57*57*2^15 = 106'463'232
Time: 26
Total Combinations: 57*57*2^15*26 = 2'768'044'032

Strategy
========
Determine
Size for all Valve Permutations:
32768 Permutations * 15 Indexes * 8 byte per index = 3'932'160 ~= 4 MB



memory:
position

action (open, move)
direction (self, neighbor)
result



new cache key: order of opening valves by turn
space:
  number of turns: 30
  *
  valve number: 15 => 4bit
  = 120 bit = 15 byte

old cache key: uint64 + int16 + int16 = 96bit





